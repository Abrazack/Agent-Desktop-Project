<!DOCTYPE html>
<html lang="en" data-language="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Business Management Pro</title>
    <style>
        :root {
            --primary-color: #2f7366;
            --secondary-color: #f3a157;
            --accent-color: #0261d9;
            --background-color: #f3ddb3;
            --text-light: #ffffff;
            --danger-color: #d87487;
        }

        body { 
            font-family: 'Segoe UI', system-ui, sans-serif; 
            margin: 0; 
            background-color: var(--background-color);
            color: #333;
        }

        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: var(--background-color);
        }

        .login-box {
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .header { 
            background-color: var(--primary-color); 
            color: var(--text-light); 
            padding: 1rem;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav-menu {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            padding: 1rem;
            background-color: var(--secondary-color);
            justify-content: center;
        }

        .nav-button {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 4px;
            background-color: var(--accent-color);
            color: var(--text-light);
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .nav-button:hover {
            background-color: #004a9f;
            transform: translateY(-1px);
        }

        .container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .section {
            background: white;
            border-radius: 8px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            margin-bottom: 2rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: var(--primary-color);
            color: var(--text-light);
            font-weight: 600;
        }

        .action-button {
            padding: 0.5rem 1rem;
            margin: 0 0.25rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: opacity 0.2s ease;
        }

        .action-button:hover {
            opacity: 0.9;
        }

        .edit { background-color: var(--secondary-color); }
        .delete { background-color: var(--danger-color); }
        .success { background-color: #4CAF50; }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background: white;
            padding: 2rem;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
        }

        .form-group input, .form-group select {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .hidden { display: none; }

        .settings-menu {
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1000;
        }

        .password-strength {
            height: 4px;
            margin-top: 5px;
            background: #ddd;
        }

        .strength-weak { background: #ff4444; width: 33%; }
        .strength-medium { background: #ffbb33; width: 66%; }
        .strength-strong { background: #00C851; width: 100%; }

        .currency-display::before {
            content: attr(data-currency);
            margin-right: 5px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <!-- Login System -->
    <div class="login-container" id="loginPage">
        <div class="login-box">
            <h2 data-localize="welcome">Business Management Pro</h2>
            <form id="loginForm" onsubmit="event.preventDefault(); login()">
                <div class="form-group">
                    <label data-localize="username">Username</label>
                    <input type="text" id="username" required>
                </div>
                <div class="form-group">
                    <label data-localize="password">Password</label>
                    <input type="password" id="password" required>
                </div>
                <button class="action-button success" data-localize="login">Login</button>
            </form>
        </div>
    </div>

    <!-- Main Dashboard -->
    <div id="dashboard" class="hidden">
        <!-- Header Section -->
        <div class="header">
            <h1 data-localize="business_dashboard">Business Dashboard</h1>
            <div>
                <span data-localize="logged_in_as">Logged in as: </span>
                <span id="currentUser"></span>
                <button class="action-button" onclick="showSettings()" data-localize="settings">⚙️ Settings</button>
            </div>
        </div>

        <!-- Navigation Menu -->
        <nav class="nav-menu">
            <button class="nav-button" data-section="employees" data-localize="employees">Employees</button>
            <button class="nav-button" data-section="inventory" data-localize="inventory">Inventory</button>
            <button class="nav-button" data-section="sales" data-localize="sales">Sales</button>
            <button class="nav-button" data-section="reports" data-localize="reports">Reports</button>
        </nav>

        <!-- Main Content -->
        <main class="container">
            <!-- Employees Section -->
            <section id="employees" class="section">
                <div class="section-header">
                    <h2 data-localize="manage_employees">Manage Employees</h2>
                    <button class="action-button success" onclick="showEmployeeForm()" data-localize="add_employee">➕ Add Employee</button>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th data-localize="name">Name</th>
                            <th data-localize="position">Position</th>
                            <th data-localize="salary">Salary</th>
                            <th data-localize="actions">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="employeeList"></tbody>
                </table>
            </section>

            <!-- Inventory Section -->
            <section id="inventory" class="section hidden">
                <div class="section-header">
                    <h2 data-localize="manage_inventory">Manage Inventory</h2>
                    <button class="action-button success" onclick="showInventoryForm()" data-localize="add_product">➕ Add Product</button>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th data-localize="product">Product</th>
                            <th data-localize="stock">Stock</th>
                            <th data-localize="price">Price</th>
                            <th data-localize="actions">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="inventoryList"></tbody>
                </table>
            </section>

            <!-- Sales Section -->
            <section id="sales" class="section hidden">
                <div class="section-header">
                    <h2 data-localize="sales_management">Sales Management</h2>
                    <div>
                        <span class="currency-display" data-currency="USD" id="totalIncome">0.00</span>
                        <button class="action-button success" onclick="showSaleForm()" data-localize="add_sale">➕ New Sale</button>
                    </div>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th data-localize="date">Date</th>
                            <th data-localize="product">Product</th>
                            <th data-localize="quantity">Quantity</th>
                            <th data-localize="total">Total</th>
                        </tr>
                    </thead>
                    <tbody id="salesList"></tbody>
                </table>
            </section>
        </main>

        <!-- Settings Modal -->
        <div class="modal" id="settingsModal">
            <div class="modal-content">
                <h3 data-localize="system_settings">System Settings</h3>
                <div class="settings-tabs">
                    <button class="action-button" onclick="showSettingsTab('user')" data-localize="user_management">Users</button>
                    <button class="action-button" onclick="showSettingsTab("security")" data-localize="security">Security</button>
                    <button class="action-button" onclick="showSettingsTab("localization")" data-localize="localization">Localization</button>
                </div>

                <!-- User Management -->
                <div id="userSettings" class="settings-tab">
                    <h4 data-localize="manage_users">Manage Users</h4>
                    <button class="action-button success" onclick="showUserForm()" data-localize="add_user">➕ Add User</button>
                    <table>
                        <thead>
                            <tr>
                                <th data-localize="username">Username</th>
                                <th data-localize="role">Role</th>
                                <th data-localize="actions">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="userList"></tbody>
                    </table>
                </div>

                <!-- Security Settings -->
                <div id="securitySettings" class="settings-tab hidden">
                    <h4 data-localize="change_password">Change Password</h4>
                    <div class="form-group">
                        <input type="password" id="currentPassword" placeholder="Current Password">
                        <input type="password" id="newPassword" placeholder="New Password" oninput="checkPasswordStrength(this.value)">
                        <div class="password-strength">
                            <div id="passwordStrength"></div>
                        </div>
                        <button class="action-button success" onclick="changePassword()" data-localize="update">Update</button>
                    </div>
                </div>

                <!-- Localization Settings -->
                <div id="localizationSettings" class="settings-tab hidden">
                    <h4 data-localize="localization_settings">Localization Settings</h4>
                    <div class="form-group">
                        <label data-localize="language">Language</label>
                        <select id="languageSelect" onchange="updateLanguage(this.value)">
                            <option value="en">English</option>
                            <option value="es">Español</option>
                            <option value="fr">Français</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label data-localize="currency">Currency</label>
                        <select id="currencySelect" onchange="updateCurrency(this.value)">
                            <option value="USD">US Dollar ($)</option>
                            <option value="EUR">Euro (€)</option>
                            <option value="JPY">Japanese Yen (¥)</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // System Configuration
        const SYSTEM_CONFIG = {
            exchangeRates: { USD: 1, EUR: 0.93, JPY: 148.5 },
            currentUser: null,
            users: [
                { username: 'admin', password: 'admin123', role: 'admin' }
            ],
            employees: [],
            inventory: [],
            sales: [],
            totalIncome: 0,
            settings: {
                language: 'en',
                currency: 'USD'
            },
            translations: {
                en: {
                    welcome: "Welcome to Business Management Pro",
                    username: "Username",
                    password: "Password",
                    login: "Login",
                    settings: "Settings",
                    // Add all other translations
                },
                es: {
                    welcome: "Bienvenido a Business Management Pro",
                    username: "Usuario",
                    password: "Contraseña",
                    login: "Iniciar sesión",
                    settings: "Configuraciones"
                },
                fr: {
                    welcome: "Bienvenue dans Business Management Pro",
                    username: "Nom d'utilisateur",
                    password: "Mot de passe",
                    login: "Connexion",
                    settings: "Paramètres"
                }
            }
        };

        // Initialization
        document.addEventListener('DOMContentLoaded', () => {
            applyLocalization();
            loadData();
        });

        // Core Functions
        function login() {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            const user = SYSTEM_CONFIG.users.find(u => u.username === username && u.password === password);
            if(user) {
                SYSTEM_CONFIG.currentUser = user;
                document.getElementById('loginPage').classList.add('hidden');
                document.getElementById('dashboard').classList.remove('hidden');
                document.getElementById('currentUser').textContent = user.username;
                updateUI();
            } else {
                alert('Invalid credentials');
            }
        }

        function showSettings() {
            document.getElementById('settingsModal').style.display = 'flex';
        }

        // Data Management
        function showEmployeeForm() {
            showModal('Add Employee', `
                <div class="form-group">
                    <label data-localize="full_name">Full Name</label>
                    <input type="text" id="empName" required>
                </div>
                <div class="form-group">
                    <label data-localize="position">Position</label>
                    <input type="text" id="empPosition" required>
                </div>
                <button class="action-button success" onclick="saveEmployee()" data-localize="save">Save</button>
            `);
        }

        function saveEmployee() {
            const newEmployee = {
                id: Date.now(),
                name: document.getElementById('empName').value,
                position: document.getElementById('empPosition').value,
                salary: "₹50,000"
            };
            SYSTEM_CONFIG.employees.push(newEmployee);
            renderEmployees();
            closeModal();
        }

        // Rendering Functions
        function renderEmployees() {
            const tbody = document.getElementById('employeeList');
            tbody.innerHTML = SYSTEM_CONFIG.employees.map(emp => `
                <tr>
                    <td>${emp.name}</td>
                    <td>${emp.position}</td>
                    <td>${emp.salary}</td>
                    <td>
                        <button class="action-button edit" onclick="editEmployee('${emp.id}')">✏️</button>
                        <button class="action-button delete" onclick="deleteEmployee('${emp.id}')">🗑️</button>
                    </td>
                </tr>
            `).join('');
        }

        // Localization
        function updateLanguage(lang) {
            SYSTEM_CONFIG.settings.language = lang;
            applyLocalization();
        }

        function applyLocalization() {
            document.querySelectorAll('[data-localize]').forEach(el => {
                const key = el.getAttribute('data-localize');
                el.textContent = SYSTEM_CONFIG.translations[SYSTEM_CONFIG.settings.language][key] || key;
            });
        }

        // Utility Functions
        function showModal(title, content) {
            document.getElementById('settingsModal').style.display = 'flex';
            document.getElementById('modalTitle').textContent = title;
            document.getElementById('modalContent').innerHTML = content;
        }

        function closeModal() {
            document.getElementById('settingsModal').style.display = 'none';
        }

        function updateUI() {
            renderEmployees();
            // Add other render functions
        }

        // Data Persistence
        function saveData() {
            localStorage.setItem('businessData', JSON.stringify(SYSTEM_CONFIG));
        }

        function loadData() {
            const data = localStorage.getItem('businessData');
            if(data) Object.assign(SYSTEM_CONFIG, JSON.parse(data));
        }

        // Event Listeners
        document.querySelectorAll('.nav-button').forEach(button => {
            button.addEventListener('click', () => {
                const sectionId = button.dataset.section;
                document.querySelectorAll('.section').forEach(s => s.classList.add('hidden'));
                document.getElementById(sectionId).classList.remove('hidden');
            });
        });
    </script>
</body>
</html>